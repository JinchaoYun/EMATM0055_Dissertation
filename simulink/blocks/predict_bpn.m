function [y1] = predict_bpn(x1)
%PREDICT_BPN neural network simulation function.
%
% Auto-generated by MATLAB, 25-Aug-2025 23:28:47.
% 
% [y1] = predict_bpn(x1) takes these arguments:
%   x = 6xQ matrix, input #1
% and returns:
%   y = 7xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0;0;0;0];
x1_step1.gain = [2;2;2;2;2;2];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.8414280726234004693;1.9984234908343836423;-1.7660413105427965608;0.48251442131034039118;-0.19903585146443639187;0.068604237817357777152;-0.20741746923725251639;0.88920045332938257854;-0.070103859026629009032;0.16675832440091775677;0.35257890476429681881;1.5538638783077829419;-1.0986519022340115459];
IW1_1 = [-0.92921378016373168407 1.1111754735093595237 1.0242934060730821688 0.31384255401267913133 -1.2465477745951532018 -0.49877655597717274194;0.018221954881138660576 -0.21844568369396646923 0.8840936047278118437 -1.0100247316620316607 -0.70520767163514297415 -1.6379385073398147199;0.022749476018855473852 0.88137619932152666546 -0.94541808255524761861 1.2117518872935764129 -0.20675436536645894203 1.8162937693160432495;-2.2622345264439061019 1.1768958955152815093 -1.3969827111916177653 0.051436859464309279966 -0.9334162802980007223 -1.3358513351702565597;1.6991575738780084759 2.2128417611876618487 0.71215593451083547549 1.1544489929717316468 -0.40014935954848002142 -2.1076849001797746119;-0.036095216302864031876 1.5032665100105353506 0.2556464893130389604 1.6426246139478470898 -2.7519022207343404318 -1.158292007570824067;0.42979886171450426557 -1.2183424905486823775 1.2110060250729159925 -0.17461227592542094555 1.0139210618211462744 -0.35784292900766545564;0.40131022418395384532 -1.5537074612600649814 0.85342491491486527355 2.1035276037200887345 0.070447043125271127662 0.88877124075705027373;-2.6820802307038111856 -3.2174760171687815102 -2.6679313495803742562 0.68350372762701738782 -0.97384310331849677222 3.2467348898091614728;0.93273426835886319441 0.52079644438535588336 3.2174577882983323995 -1.1880709222648258017 -1.1393638201525166931 -0.36626960370155531299;-0.15290985516591043547 -2.1196419647000679376 2.5180125791035665728 -4.0697739756730859639 2.5124746262627635218 1.2652368060169911779;1.1714596689266596474 0.43666234246501084426 0.78306634691154142214 -0.28438865243584116049 1.0775036538628965932 -1.1170257525701408063;-1.6893417679315430036 -1.1132197606647795673 0.62620602892745302892 -1.3966530702408332942 0.39781972828279404952 -1.2355851313602548291];

% Layer 2
b2 = [-1.742926487685475756;-1.2452494357580752293;-0.9402013400354319872;-0.9398992352250150617;-0.28501055348009518564;0.47433757741416110454;0.18677933379998443164;0.18274137476579649375;-0.56667412779753201235;-0.69391431307441087117;0.89250132211904054103;1.4244048369858155478;1.7409648034873457245];
LW2_1 = [0.70197859713791133096 0.18114065379773386377 -1.9290925054129393068 -0.020751601017290309537 0.56281974644704446664 0.2969401411881087971 0.12731837962277725573 -1.0332630862457845566 -3.3628601285117141195 2.2309873128389918762 2.5589577354603405546 0.63566594788566743723 0.71358745308627247184;0.33206330102106446089 0.95515435404391413332 -0.33655692735635917012 0.040502117944657294035 1.4640136962273362364 1.4616332335691555322 -1.0434674689832053041 -0.39741590584611580228 -1.8746673699029352544 -0.068968339003753834082 -2.0039191756496577135 0.0007215573017233305143 -0.96841838385448864024;0.82239534967864691417 0.41613224583597840933 0.55228302731275924486 -0.14273462368204906103 -0.27532415765039414124 0.27109767286423502863 0.42612772723150899035 0.73057174718300499361 -0.78342388807230178838 -0.23351762388984287355 0.34428172869308976134 0.20414229097433916893 0.0038157286995218319542;0.37983672186914291258 -0.65171372711675479295 0.38603230055830073386 -0.43410504511636038849 -0.36729338762867441703 -0.44858064124634289271 -0.47489686002267089693 -0.63920259292857062317 0.41852525392736739107 -0.48060980535117858725 -0.18587628356634031124 0.48576124580860047253 0.65405587635883433162;0.68880193753680152291 -0.079902557530051182555 0.41156168128241849002 2.1218671366852368543 0.62669461264188142113 2.2321726162594455189 -0.64974542786387823323 0.50837237262524914705 1.6912047649980894715 -1.4623640914500115606 -3.942813154626277683 -0.34549405800892801777 -0.68030034112678761105;-0.11087624128999291895 0.38897516299956491626 1.280780384941502037 -1.0879950215953404502 -1.669667287010891954 -0.21208585369511437357 0.34168696111382212965 1.4757237929586672909 2.6337634244761183311 0.53931878136096778054 1.6214253539363394641 -0.32998358250216081045 0.11137910430234147785;-0.39472156133711150394 -0.23520259881747679342 0.30086729157088526465 0.70869945688059110545 0.028530691988164259137 -1.8214523122222858742 0.50989684353573017095 -0.61384062983643894462 -0.49125640486805050022 -1.8096357596781884602 1.1993511995358498989 0.7569559358236219726 0.49792824313266803582;0.51059911592150175608 0.74454016384226262559 -0.27898665716437998086 1.3238301339858578043 0.92735958731030254665 0.45187944197198032237 -0.41968137861881654738 -0.40327471237140949389 -1.6729075402100301861 0.88945226578656422234 -0.8179245756649942134 -0.23367389376047845162 0.88166618517281813983;-0.88853559049311725548 -0.6531445495125642875 -0.21154229539619995304 0.09831395902384687524 0.21840552082158537495 0.58462194681095147608 -0.57137791311617036616 0.26899630468229146496 -0.25076927635014190088 -0.76209723889119374007 0.017868285204815367168 -0.35826040623926952433 0.35443335987286489486;-0.65561311720519566126 0.44305545269135560016 0.036779577762647876205 -0.28416134379485080697 1.2426770273541949408 -0.53906417991679445034 0.15219576313882007823 0.11505650754374589784 -0.9220907068271866347 0.017012354260571866532 -0.78654489379598591103 0.1896335622062951809 -0.76160602559017354096;0.021618713817908977864 -1.2423719464308975446 0.71209468979834600333 0.43218412155024343857 -2.1027499767520345664 -1.2506530397934196852 0.55522252909615943395 0.99345721381436180586 3.0958425954525479185 -0.57290533469891391505 1.3305989078476880838 0.33633098904969493947 1.5671810950474633906;0.77994767013476784534 -0.19613890114919690921 -0.47580648575640044351 -0.20299912191088603786 0.79208327551869717187 0.21295509937497095199 0.61108968427491816566 -0.3852001727332564629 -0.20176420465782754499 -0.64328332048505809659 0.034541071716224620858 -0.283138141442151825 -0.49867141424137972905;0.57679101885978178998 0.22593794446159767841 -0.75186591062501029192 0.12319394390498349112 -0.49453268935703365017 -0.51044606109230195035 -0.50017690887877808148 0.61471432991408114788 0.59255734264665982369 0.62674930634943737395 0.061302955324037518292 -0.23445761879187981824 0.078475857150226757675];

% Layer 3
b3 = [-0.74891891439885294179;-0.26999602999391925096;-0.44684052082796626992;0.62927470000097884828;0.4540982088116756743;-0.86427120499366716366;-0.084551477076112963038];
LW3_2 = [2.815522758897380573 -1.856232790811792599 -0.046269733261091412768 0.61318008316504146737 -4.9125477898561769052 0.85411615908611393522 1.8530334015609857268 -0.097401176290327753926 -0.022340603669843021872 0.47782262083507565098 -0.017909049539300937043 0.19704992863600440112 0.46486016020106196711;-1.7690781861090196792 -1.3435034628394721956 0.49742101434918378766 0.10610682778563491901 -1.8572384698309349904 2.5835909654447322126 -0.46071353376142176739 -3.7940713425370193868 0.522398589178560524 0.026034422801552822152 2.2731757443571614097 -0.58765055892381057312 0.10537667900594002712;-2.1149313179068851554 -1.6804837446662437284 -0.13192163486453378773 -0.51976716799190425533 2.9514091190893458894 1.4577420092638544435 0.83297845235835454858 -0.23343791888363010778 0.2022467928466663567 -1.3014765723221435323 2.9738972180609422047 0.54494464482793047999 -0.93905479803583469245;-3.5128233455100619231 1.7242919125273543646 0.25153453228916139439 -0.069177891002066449477 2.7518777520129313885 -0.78845876044802121196 -0.47488135167515327373 -0.34664422170046998994 -0.8196553771499431873 0.44718994741538808935 -1.4440530753706919409 -0.59090999329203874879 -0.71306244244573524504;1.0227451544798560334 0.73142459027712170005 -0.1009565234961835728 -0.36449478718069927563 1.2469066229746768038 -0.55201474493611790706 -1.8236853896347140491 0.67189866425393152127 -0.47534189383472913448 0.52080824434079708851 -2.8424204162823762942 -0.62066846243769824287 0.49599245449638013072;3.0824595289836396184 1.9559995985736571278 0.34090832891703337637 0.05602753369680410489 -0.74238119463633267525 -3.7413660824750811784 -0.19720184567054155345 1.2808240654910749701 0.57691561462052276532 0.97234377428834628532 -2.1669732490242172851 -0.26868362512593835234 -0.21732816911388286307;1.4952607187239495001 -0.79233525616788935686 0.24967714583996894473 0.42180395578815255142 -1.3276723164067625316 2.0893415173834566367 -2.0106252828176089942 0.25797329605135072006 -1.0859540189207452787 -1.2256222172305588636 -0.14500480817452393589 0.84602656393262154477 -0.39578484412593528674];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);

% Layer 3
a3 = softmax_apply(repmat(b3,1,Q) + LW3_2*a2);

% Output 1
y1 = a3;
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n,~)
  if isa(n,'gpuArray')
    a = iSoftmaxApplyGPU(n);
  else
    a = iSoftmaxApplyCPU(n);
  end
end
function a = iSoftmaxApplyCPU(n)
  nmax = max(n,[],1);
  n = bsxfun(@minus,n,nmax);
  numerator = exp(n);
  denominator = sum(numerator,1); 
  denominator(denominator == 0) = 1;
  a = bsxfun(@rdivide,numerator,denominator);
end
function a = iSoftmaxApplyGPU(n)
  nmax = max(n,[],1);
  numerator = arrayfun(@iSoftmaxApplyGPUHelper1,n,nmax);
  denominator = sum(numerator,1);
  a = arrayfun(@iSoftmaxApplyGPUHelper2,numerator,denominator);
end
function numerator = iSoftmaxApplyGPUHelper1(n,nmax)
  numerator = exp(n - nmax);
end
function a = iSoftmaxApplyGPUHelper2(numerator,denominator)
  if (denominator == 0)
    a = numerator;
  else
    a = numerator ./ denominator;
  end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
